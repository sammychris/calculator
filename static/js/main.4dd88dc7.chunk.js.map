{"version":3,"sources":["serviceWorker.js","index.js","App.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","DisplayOutput","props","react__WEBPACK_IMPORTED_MODULE_6___default","id","input","result","ButtonNums","onClick","cal","_this","Object","C_Users_San_Desktop_MainProject_calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_San_Desktop_MainProject_calculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_San_Desktop_MainProject_calculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","total","evaluated","getValue","bind","C_Users_San_Desktop_MainProject_calculator_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","specialChar","e","_this2","inputVal","replace","totalVal","currentVal","test","target","innerText","length","setState","setTimeout","includes","slice","char","strNum","eval","evaluate","concat","toPrecision","React","Component"],"mappings":"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","file":"static/js/main.4dd88dc7.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport './App.scss';\n\nconst DisplayOutput = (props) => {\n  return (\n    <div id=\"output\">\n      <div id=\"input\">{props.input}</div>\n      <div id=\"display\">{props.result}</div>\n    </div>\n  )\n}\n\nconst ButtonNums = (props) => {\n  return(\n    <div id=\"buttons\">\n        <div id=\"clear\"    onClick={props.cal}   >AC</div>\n        <div id=\"divide\"   onClick={props.input} >/</div>\n        <div id=\"multiply\" onClick={props.input} >x</div>\n        <div id=\"seven\"    onClick={props.input} >7</div>\n        <div id=\"eight\"    onClick={props.input} >8</div>\n        <div id=\"nine\"     onClick={props.input} >9</div>\n        <div id=\"subtract\" onClick={props.input} >-</div>\n        <div id=\"four\"     onClick={props.input} >4</div>\n        <div id=\"five\"     onClick={props.input} >5</div>\n        <div id=\"six\"      onClick={props.input} >6</div>\n        <div id=\"add\"      onClick={props.input} >+</div>\n        <div id=\"one\"      onClick={props.input} >1</div>\n        <div id=\"two\"      onClick={props.input} >2</div>\n        <div id=\"three\"    onClick={props.input} >3</div>\n        <div id=\"zero\"     onClick={props.input} >0</div>\n        <div id=\"decimal\"  onClick={props.input} >.</div>\n        <div id=\"equals\"   onClick={props.cal}   >=</div>\n      </div>\n  )\n}\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      input: '',\n      total: '0',\n      evaluated: false\n    }\n    this.getValue = this.getValue.bind(this);\n    this.specialChar = this.specialChar.bind(this);\n  }\n  getValue(e) {\n    let inputVal = this.state.input.replace(/^[0|\\+|x|\\/|\\-]+$/,'');\n    let totalVal = this.state.total.replace(/^[0|\\+|x|\\/|\\-]+$/,'');\n    let currentVal = (!totalVal && !/0$/.test(inputVal)) || this.state.evaluated || /[\\+|x|\\/|\\-]$/.test(inputVal) ?\n        e.target.innerText.replace(/[\\.]/,'0.'):\n        e.target.innerText;\n\n    if(totalVal.length > 10 || inputVal.length > 20){\n      this.setState({ total: currentVal, input: 'DIGIT LIMIT MET' })\n      setTimeout(() => { this.setState({ total:currentVal, input:currentVal}) }, 2000);\n      return;\n    }\n    if ( !(totalVal.includes(currentVal) && currentVal === '.')) {\n      if(this.state.evaluated) {\n        if('+-/x'.includes(currentVal)){\n          this.setState({\n            total: currentVal,\n            input: totalVal + currentVal,\n            evaluated: false\n          })\n        } else {\n          this.setState({\n            total: currentVal,\n            input: currentVal,\n            evaluated: false\n          })\n        }\n     } else {\n        if('+-/x'.includes(currentVal)){\n          if(/[+\\-\\/x]$/.test(inputVal)) {\n             inputVal = inputVal.slice(0, -1);\n          }\n          this.setState({\n            input: inputVal + currentVal,\n            total: currentVal,\n            evaluated: false\n          })\n        } else {\n          this.setState({\n            input: inputVal + currentVal,\n            total: totalVal.replace(/[x\\/\\-\\+]/g,'') + currentVal,\n            evaluated: false\n          })\n        }\n      }\n    }\n  }\n  specialChar(e) {\n    let char = e.target.innerText;\n    let input = this.state.input.replace(/x/g,'*');\n    if (char === '=') {\n      if(!input || input=='0' || /=/g.test(input)) return;\n      let strNum = ''+eval(input);\n      let evaluate = `${eval(input)}`.length > 9?\n          eval(input).toPrecision(9):\n          eval(input);\n      \n      this.setState({\n        input: this.state.input +' = '+evaluate,\n        total: evaluate+'',\n        evaluated: true\n      })\n    } else if (char === 'AC') {\n      this.setState({\n        total: '0',\n        input: ''\n      })\n    }\n  }\n  render () {        \n    return (\n      <div id=\"calculator\">\n        <DisplayOutput result={this.state.total} input={this.state.input}/>\n        <ButtonNums input={this.getValue} cal={this.specialChar}/>\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n"],"sourceRoot":""}